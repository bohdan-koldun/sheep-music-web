server {
    listen       80;
    server_name  localhost;
    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

   location / {
    try_files $uri @directOrRender;
  }

  location @directOrRender {
    error_page 591 = @direct;
    error_page 592 = @renderjs;
    recursive_error_pages on;

    if ($http_user_agent ~* "bot|spider|crawler|index|hit|aboundex|addthis|admantx|bibnum.bnf|biglotron|binlar|bubing|capsulechecker|metadata|scaper|changedetection|coccoc|collection@infegy.com|commons-httpclient|convera|curl|cyberpatrol|deadlinkchecker|deusu|drupact|ec2linkfinder|embedly|embedly|europarchive.org|ezooms|findlink|findthatfile|fluffy|gigablast|go-http-client|google|grub.org|heritrix|httpunit|httrack|ia_archiver|ichiro|integromedb|ioi|ips-agent|iskanie|java|libwww|linkdex|lipperhey|lipperhey|seo|service|ltx71|mailru|mediapartners|metauri|netresearchserver|nutch|outbrain|page2rss|panscient|phpcrawl|pinterest|postrank|proximic|python-urllib|quora|link|preview|qwantify|retrevopageanalyzer|scrapy|siteexplorer.info|skype|uri|slack|imgproxy|slurp|sogou|sonic|speedy|summify|sysomos|teoma|trove|vkshare|voyager|w3c_validator|webmon|wesee|search|wget|wotbox|y!j-asr|yanga|yeti") {
      return 592;
    }

    if ($args ~ "_escaped_fragment_") {
      return 592;
    }

    return 591;
  }

  location @renderjs {
    # resolve using Google's DNS server to force
    # DNS resolution and prevent caching of IPs
    resolver 8.8.8.8;

    set $renderjs "service.renderjs.io";
    rewrite .* $request_uri? break;

    proxy_set_header X-Renderjs-Token 0283e598-8726-9cba-26c1-ee5cef62c27d;

    proxy_pass https://$renderjs;
  }

  location @direct {
    proxy_pass localhost;
  }
}