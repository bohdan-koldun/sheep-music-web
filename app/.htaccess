<ifModule mod_rewrite.c>


  #######################################################################
  # GENERAL                                                             #
  #######################################################################

  # Make apache follow sym links to files
  Options +FollowSymLinks
  # If somebody opens a folder, hide all files from the resulting folder list
  IndexIgnore */*


  #######################################################################
  # REWRITING                                                           #
  #######################################################################

  # Enable rewriting
  RewriteEngine On

  # If its not HTTPS
  RewriteCond %{HTTPS} off

  # Comment out the RewriteCond above, and uncomment the RewriteCond below if you're using a load balancer (e.g. CloudFlare) for SSL
  # RewriteCond %{HTTP:X-Forwarded-Proto} !https

  # Redirect to the same URL with https://, ignoring all further rules if this one is in effect
  RewriteRule ^(.*) https://%{HTTP_HOST}/$1 [R,L]

  # If we get to here, it means we are on https://

  # If the file with the specified name in the browser doesn't exist
  RewriteCond %{REQUEST_FILENAME} !-f

  # and the directory with the specified name in the browser doesn't exist
  RewriteCond %{REQUEST_FILENAME} !-d

  # and we are not opening the root already (otherwise we get a redirect loop)
  RewriteCond %{REQUEST_FILENAME} !\/$

  # Rewrite all requests to the root
  RewriteRule ^(.*) /

      <IfModule mod_proxy_http.c>
        # TL;DR: use gzip for communication between this Apache instance and service.prerender.cloud
        #        even if the client is not gzip capable (in which case we'll uncompress for them)
        SetEnvIf Accept-Encoding "(.*)" ORIGINAL_ACCEPT_ENCODING=$1
        RequestHeader set original-accept-encoding "%{ORIGINAL_ACCEPT_ENCODING}e"
        RequestHeader add accept-encoding gzip
        FilterDeclare gzip CONTENT_SET
        # Apache <= 2.2
        # FilterProvider gzip inflate req=original-accept-encoding !$gzip
        # Apache >= 2.4
        FilterProvider gzip inflate "%{req:original-accept-encoding} !~ /gzip/"
        FilterChain gzip
        Header set Vary "Accept-Encoding"



        # TL;DR: 1. serve static assets if exist, else index.html
        #        2. proxy to prerender.cloud unless it is prerender.cloud making the request

        # If requested resource:
        # is not /
        # and is not index.html
        # and exists as a file or directory
        # then go to it as is
        # (REQUEST_FILENAME is only relative in virtualhost context, so not usable)
        RewriteCond %{REQUEST_URI} !^/$
        RewriteCond %{REQUEST_URI} !^/index.html$
        RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
        RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
        RewriteRule ^ - [L]

        uncomment these 3 lines for bots only
        RewriteCond %{HTTP_USER_AGENT} googlebot|yahoo|bingbot|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora\ link\ preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator|redditbot|Applebot|WhatsApp|flipboard|tumblr|bitlybot [NC,OR]
        RewriteCond %{QUERY_STRING} _escaped_fragment_
        Header append Vary User-Agent

        RewriteCond %{HTTP_USER_AGENT} !prerendercloud [NC]
        #                                                                              if END throws an error, use L instead
        RewriteRule ^(.*)$ http://service.prerender.cloud/%{REQUEST_SCHEME}://%{HTTP_HOST}/$1 [P,END]

        # If non existent
        # Accept everything on index.html
        RewriteRule ^ index.html
    </IfModule>
</ifModule>

<IfModule mod_headers.c>
  RequestHeader set X-Prerender-Token "dXMtd2VzdC0yOjQxOTJmNWRkLTBmMGUtNDEwMS05YTU4LTg0MTU1MTJmNmIwZQ.yuVmbwU5eiwpHxzMnqBOoT0zlgMSTwIPV1THNllTRdo"

  # Do not cache sw.js, required for offline-first updates.
  <FilesMatch "sw\.js$">
    Header set Cache-Control "private, no-cache, no-store, proxy-revalidate, no-transform"
    Header set Pragma "no-cache"
  </FilesMatch>
</IfModule>
